---
import { getLanguageFromURL } from '../../languages';
import { SIDEBAR } from '../../config';
import { CaretDownIcon } from '@selleo/core/src/icons';

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith('/')
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<nav class="mr-2 w-full" aria-labelledby="grid-left">
  <ul
    class="nav-groups h-full py-4 overflow-y-auto overflow-x-visible max-h-screen md:py-0 list-none p-0"
  >
    {
      Object.entries(sidebar).map(([header, children]) => (
        <li class="mt-4 first:pt-4 first:mt-0 mt-4 last:pb-4 last:mb-6">
          <div>
            <h2 class="mb-2 font-bold leading-none text-lg">{header}</h2>
            <ul class="list-none p-0">
              {children.map((child) => {
                const shouldBeExpanded = child.sublinks?.some(
                  ({ link }) => link === currentPageMatch
                );

                if (child.sublinks) {
                  return (
                    <li>
                      <div class="subTitle flex items-center cursor-pointer text-sm m-[1px] py-[0.3rem] px-2 text-inherit hover:no-underline focus:no-underline focus-visible:no-underline hover:bg-theme-gray-950 dark:hover:bg-theme-gray-400 focus-visible:bg-theme-gray-950 dark:focus-visible:bg-theme-gray-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-theme-gray-100 dark:focus-visible:outline-white">
                        <a>{child.text}</a>
                        <div class="caret-icon z-[1]">
                          <CaretDownIcon width={24} height={24} />
                        </div>
                      </div>
                      <ul class={`${shouldBeExpanded ? '' : 'hidden'} submenu`}>
                        {child.sublinks.map((sublink) => {
                          const sublinkUrl =
                            Astro.site?.pathname + sublink.link;
                          return (
                            <li>
                              <a
                                class={`block text-sm m-[1px] py-[0.3rem] px-5 text-inherit hover:no-underline focus:no-underline focus-visible:no-underline hover:bg-theme-gray-950 dark:hover:bg-theme-gray-400 focus-visible:bg-theme-gray-950 dark:focus-visible:bg-theme-gray-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-theme-gray-100 dark:focus-visible:outline-white ${
                                  currentPageMatch === sublink.link
                                    ? 'text-theme-accent dark:text-white bg-theme-accent/15 font-semibold'
                                    : ''
                                }`}
                                href={sublinkUrl}
                                aria-current={
                                  currentPageMatch === sublink.link
                                    ? 'page'
                                    : false
                                }
                              >
                                {sublink.text}
                              </a>
                            </li>
                          );
                        })}
                      </ul>
                    </li>
                  );
                }

                const url = Astro.site?.pathname + child.link;

                return (
                  <li>
                    <a
                      class={`block text-sm m-[1px] py-[0.3rem] px-2 text-inherit hover:no-underline focus:no-underline focus-visible:no-underline hover:bg-theme-gray-950 dark:hover:bg-theme-gray-400 focus-visible:bg-theme-gray-950 dark:focus-visible:bg-theme-gray-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-theme-gray-100 dark:focus-visible:outline-white ${
                        currentPageMatch === child.link
                          ? 'text-theme-accent dark:text-white bg-theme-accent/15 font-semibold'
                          : ''
                      }`}
                      href={url}
                      aria-current={
                        currentPageMatch === child.link ? 'page' : false
                      }
                    >
                      {child.text}
                    </a>
                  </li>
                );
              })}
            </ul>
          </div>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    var target = document.querySelector('[aria-current="page"]');
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector('.nav-groups').scrollTop = target.offsetTop;
    }

    const subTitles = document.querySelectorAll('.subTitle');

    const caretDownIcon = `<svg
          width="24"
        height="24"
            xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="none"
    >
      <path
        d="M12 14L15 10.9999"
        stroke="white"
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M9 11L12 14"
        stroke="white"
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>`;

    const caretUpIcon = `<svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12 11L9 14.0001"
        stroke="white"
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M15 14L12 11"
        stroke="white"
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>`;

    subTitles.forEach((title) => {
      const submenu = document.querySelector('.submenu');

      title.addEventListener('click', (e) => {
        submenu.classList.toggle('hidden');

        const iconParent = document.querySelector('.caret-icon');

        iconParent.innerHTML = e.target.nextElementSibling.classList.contains(
          'hidden'
        )
          ? caretDownIcon
          : caretUpIcon;
      });
    });
  });
</script>
